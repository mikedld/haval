include(CMakeFindDependencyMacro)

set(_@PROJECT_NAME@_ALL_COMPS core qt app)

set(_@PROJECT_NAME@_HAVE_COMP_core TRUE)
set(_@PROJECT_NAME@_HAVE_COMP_qt @HAVAL_ENABLE_QT@)
set(_@PROJECT_NAME@_HAVE_COMP_app @HAVAL_BUILD_PROGRAMS@)

set(_@PROJECT_NAME@_COMPS "${@PROJECT_NAME@_FIND_COMPONENTS}")
if(NOT _@PROJECT_NAME@_COMPS)
    set(_@PROJECT_NAME@_COMPS ${_@PROJECT_NAME@_ALL_COMPS})
elseif(qt IN_LIST _@PROJECT_NAME@_COMPS AND NOT core IN_LIST _@PROJECT_NAME@_COMPS)
    list(APPEND _@PROJECT_NAME@_COMPS core)
    set(@PROJECT_NAME@_FIND_REQUIRED_core TRUE)
endif()

foreach(_@PROJECT_NAME@_COMP IN LISTS _@PROJECT_NAME@_ALL_COMPS)
    if(_@PROJECT_NAME@_COMP IN_LIST _@PROJECT_NAME@_COMPS)
        if(_@PROJECT_NAME@_HAVE_COMP_${_@PROJECT_NAME@_COMP})
            if(_@PROJECT_NAME@_COMP STREQUAL qt)
                find_dependency(Qt@HAVAL_QT_VERSION_MAJOR@ @HAVAL_QT_VERSION@ COMPONENTS Core)
            endif()

            include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets-${_@PROJECT_NAME@_COMP}.cmake" OPTIONAL RESULT_VARIABLE _@PROJECT_NAME@_COMP_FOUND)
        else()
            set(_@PROJECT_NAME@_COMP_FOUND FALSE)
        endif()
        if(NOT _@PROJECT_NAME@_COMP_FOUND AND @PROJECT_NAME@_FIND_REQUIRED_${_@PROJECT_NAME@_COMP})
            set(@PROJECT_NAME@_FOUND FALSE)
            set(@PROJECT_NAME@_NOT_FOUND_MESSAGE "Missing component: ${_@PROJECT_NAME@_COMP}")
            return()
        endif()
        list(REMOVE_ITEM _@PROJECT_NAME@_COMPS ${_@PROJECT_NAME@_COMP})
    endif()
endforeach()

if(_@PROJECT_NAME@_COMPS)
    set(@PROJECT_NAME@_FOUND FALSE)
    set(@PROJECT_NAME@_NOT_FOUND_MESSAGE "Unsupported component(s): ${_@PROJECT_NAME@_COMPS}")
endif()
